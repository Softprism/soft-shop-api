{"version":3,"sources":["../../src/models/user-cart.model.js"],"names":["BasketSchema","mongoose","Schema","user","type","Types","ObjectId","required","ref","product","productName","String","qty","Number","productImage","price","totalPrice","productId","selectedVariants","variantId","variantTitle","itemName","itemPrice","quantity","timestamps","Basket","model"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,YAAY,GAAGC,qBAASC,MAAT,CACnB;AACEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBG,KAAhB,CAAsBC,QADxB;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJC,IAAAA,GAAG,EAAE;AAHD,GADR;AAMEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE;AAAEN,MAAAA,IAAI,EAAEO,MAAR;AAAgBJ,MAAAA,QAAQ,EAAE;AAA1B,KADN;AAEPK,IAAAA,GAAG,EAAE;AAAER,MAAAA,IAAI,EAAES,MAAR;AAAgBN,MAAAA,QAAQ,EAAE,IAA1B;AAAgC,iBAAS;AAAzC,KAFE;AAGPO,IAAAA,YAAY,EAAE;AAAEV,MAAAA,IAAI,EAAEO,MAAR;AAAgBJ,MAAAA,QAAQ,EAAE;AAA1B,KAHP;AAIPQ,IAAAA,KAAK,EAAE;AAAEX,MAAAA,IAAI,EAAES,MAAR;AAAgBN,MAAAA,QAAQ,EAAE;AAA1B,KAJA;AAKPS,IAAAA,UAAU,EAAE;AAAEZ,MAAAA,IAAI,EAAES,MAAR;AAAgBN,MAAAA,QAAQ,EAAE;AAA1B,KALL;AAKuC;AAC9CU,IAAAA,SAAS,EAAE;AACTb,MAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBG,KAAhB,CAAsBC,QADnB;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTC,MAAAA,GAAG,EAAE;AAHI,KANJ;AAWPU,IAAAA,gBAAgB,EAAE,CAChB;AACEC,MAAAA,SAAS,EAAE;AACTf,QAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBG,KAAhB,CAAsBC,QADnB;AAETC,QAAAA,QAAQ,EAAE,IAFD;AAGTC,QAAAA,GAAG,EAAE;AAHI,OADb;AAMEY,MAAAA,YAAY,EAAE;AAAEhB,QAAAA,IAAI,EAAEO,MAAR;AAAgBJ,QAAAA,QAAQ,EAAE;AAA1B,OANhB;AAOEc,MAAAA,QAAQ,EAAE;AAAEjB,QAAAA,IAAI,EAAEO,MAAR;AAAgBJ,QAAAA,QAAQ,EAAE;AAA1B,OAPZ;AAQEe,MAAAA,SAAS,EAAE;AAAElB,QAAAA,IAAI,EAAES,MAAR;AAAgBN,QAAAA,QAAQ,EAAE;AAA1B,OARb;AASEgB,MAAAA,QAAQ,EAAE;AAAEnB,QAAAA,IAAI,EAAES,MAAR;AAAgBN,QAAAA,QAAQ,EAAE;AAA1B,OATZ;AAUES,MAAAA,UAAU,EAAE;AAAEZ,QAAAA,IAAI,EAAES,MAAR;AAAgBN,QAAAA,QAAQ,EAAE;AAA1B;AAVd,KADgB;AAXX;AANX,CADmB,EAkCnB;AAAEiB,EAAAA,UAAU,EAAE;AAAd,CAlCmB,CAArB;;AAqCA,IAAMC,MAAM,GAAGxB,qBAASyB,KAAT,CAAe,QAAf,EAAyB1B,YAAzB,CAAf;;eAEeyB,M","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst BasketSchema = mongoose.Schema(\r\n  {\r\n    user: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      required: true,\r\n      ref: \"User\",\r\n    },\r\n    product: {\r\n      productName: { type: String, required: true },\r\n      qty: { type: Number, required: true, default: 1 },\r\n      productImage: { type: String, required: true },\r\n      price: { type: Number, required: true },\r\n      totalPrice: { type: Number, required: true }, // qty * price\r\n      productId: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        required: true,\r\n        ref: \"Product\",\r\n      },\r\n      selectedVariants: [\r\n        {\r\n          variantId: {\r\n            type: mongoose.Schema.Types.ObjectId,\r\n            required: true,\r\n            ref: \"Variants\",\r\n          },\r\n          variantTitle: { type: String, required: true },\r\n          itemName: { type: String, required: true },\r\n          itemPrice: { type: Number, required: true },\r\n          quantity: { type: Number, required: true },\r\n          totalPrice: { type: Number, required: true },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst Basket = mongoose.model(\"Basket\", BasketSchema);\r\n\r\nexport default Basket;\r\n"],"file":"user-cart.model.js"}