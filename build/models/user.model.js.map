{"version":3,"sources":["../../src/models/user.model.js"],"names":["userSchema","mongoose","Schema","first_name","type","String","required","last_name","phone_number","address","address_type","value","email","unique","password","orders","Types","ObjectId","ref","isVerified","Boolean","createdDate","Date","now","User","model"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,UAAU,GAAGC,qBAASC,MAAT,CAAgB;AACjCC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADqB;AAEjCC,EAAAA,SAAS,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFsB;AAGjCE,EAAAA,YAAY,EAAE;AAAEJ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAHmB;AAIjCG,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,YAAY,EAAE;AAAEN,MAAAA,IAAI,EAAEC,MAAR;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADhB;AAEEK,IAAAA,KAAK,EAAE;AAAEP,MAAAA,IAAI,EAAEC,MAAR;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B;AAFT,GADO,CAJwB;AAUjCM,EAAAA,KAAK,EAAE;AAAER,IAAAA,IAAI,EAAEC,MAAR;AAAgBQ,IAAAA,MAAM,EAAE,IAAxB;AAA8BP,IAAAA,QAAQ,EAAE;AAAxC,GAV0B;AAWjCQ,EAAAA,QAAQ,EAAE;AAAEV,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAXuB;AAYjCS,EAAAA,MAAM,EAAE,CAAC;AAAEX,IAAAA,IAAI,EAAEH,qBAASe,KAAT,CAAeC,QAAvB;AAAiCC,IAAAA,GAAG,EAAE;AAAtC,GAAD,CAZyB;AAY0B;AAC3DC,EAAAA,UAAU,EAAE;AAAEf,IAAAA,IAAI,EAAEgB,OAAR;AAAiBd,IAAAA,QAAQ,EAAE,IAA3B;AAAiC,eAAS;AAA1C,GAbqB;AAcjCe,EAAAA,WAAW,EAAE;AAAEjB,IAAAA,IAAI,EAAEkB,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B;AAdoB,CAAhB,CAAnB;;AAiBA,IAAMC,IAAI,GAAGvB,qBAASwB,KAAT,CAAe,MAAf,EAAuBzB,UAAvB,CAAb;;eAEewB,I","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst userSchema = mongoose.Schema({\r\n  first_name: { type: String, required: true },\r\n  last_name: { type: String, required: true },\r\n  phone_number: { type: String, required: true },\r\n  address: [\r\n    {\r\n      address_type: { type: String, required: true },\r\n      value: { type: String, required: true },\r\n    },\r\n  ],\r\n  email: { type: String, unique: true, required: true },\r\n  password: { type: String, required: true },\r\n  orders: [{ type: mongoose.Types.ObjectId, ref: \"Order\" }], // array to store multiple orders\r\n  isVerified: { type: Boolean, required: true, default: false },\r\n  createdDate: { type: Date, default: Date.now },\r\n});\r\n\r\nconst User = mongoose.model(\"User\", userSchema);\r\n\r\nexport default User;\r\n"],"file":"user.model.js"}