{"version":3,"sources":["../../src/middleware/jwtMiddleware.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["// import expressJwt from 'express-jwt';\r\n// // import userService from '../services/user.service.js';\r\n\r\n// const jwt = () => {\r\n// \tconst secret = process.env.JWT_SECRET;\r\n// \treturn expressJwt({ secret, algorithms: ['HS256'], isRevoked }).unless({\r\n// \t\tpath: [\r\n// \t\t\t'/',\r\n// \t\t\t/\\/admin/i,\r\n// \t\t\t/\\/user/i,\r\n// \t\t\t/\\/store/i,\r\n// \t\t\t/\\/category/i,\r\n// \t\t\t/\\/order/i,\r\n// \t\t\t/\\/product/i,\r\n// \t\t],\r\n// \t});\r\n// };\r\n\r\n// // async function isRevoked(req, payload, done) {\r\n// // \tconst user = await userService.getById(payload.id);\r\n\r\n// // \t// revoke token if user no longer exists\r\n// // \tif (!user) {\r\n// // \t\treturn done(null, true);\r\n// // \t}\r\n\r\n// // \tdone();\r\n// // }\r\n\r\n// export { jwt };\r\n"],"file":"jwtMiddleware.js"}