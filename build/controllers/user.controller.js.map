{"version":3,"sources":["../../src/controllers/user.controller.js"],"names":["router","express","Router","getUsers","req","res","query","skip","undefined","limit","status","json","success","msg","userService","users","length","verifyEmailAddress","body","action","err","result","registerUser","next","errors","isEmpty","array","loginUser","token","console","log","getLoggedInUser","user","id","updateUser","userID","admin","addItemToBasket","getUserBasketItems","editBasketItems","deleteBasketItem","deleteAllBasketItems","forgotPassword","validateToken","createNewPassword"],"mappings":"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","sourcesContent":["import express from \"express\";\r\nimport { validationResult } from \"express-validator\";\r\nimport { auth } from \"../middleware/auth.js\";\r\n\r\nimport * as userService from \"../services/user.service.js\";\r\n\r\nconst router = express.Router();\r\n\r\nconst getUsers = async (req, res) => {\r\n  if (req.query.skip === undefined || req.query.limit === undefined) {\r\n    return res\r\n      .status(400)\r\n      .json({ success: false, msg: \"filtering parameters are missing\" });\r\n  }\r\n\r\n  const users = await userService.getUsers(req.query);\r\n\r\n  users && users.length > 0\r\n    ? res.status(200).json(users)\r\n    : res.status(404).json({ success: false, msg: \"No Users found\" });\r\n};\r\n\r\nconst verifyEmailAddress = async (req, res) => {\r\n  const action = await userService.verifyEmailAddress(req.body);\r\n\r\n  if (action.err) {\r\n    return res.status(403).json({ success: false, msg: action.err });\r\n  }\r\n\r\n  return res.status(202).json({ success: true, result: action });\r\n};\r\n\r\nconst registerUser = async (req, res, next) => {\r\n  const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(400).json({ success: false, msg: errors.array() });\r\n  }\r\n\r\n  const result = await userService.registerUser(req.body);\r\n\r\n  if (result.err) {\r\n    return res.status(409).json({ success: false, msg: result.err });\r\n  }\r\n\r\n  return res.status(201).json({ success: true, result: result });\r\n};\r\n\r\nconst loginUser = async (req, res, next) => {\r\n  const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(400).json({ success: false, msg: errors });\r\n  }\r\n\r\n  // Call Login function from userService\r\n  const token = await userService.loginUser(req.body);\r\n  console.log(token);\r\n  if (token.err) {\r\n    return res.status(403).json({ success: false, msg: token.err });\r\n  }\r\n\r\n  res.status(200).json({\r\n    success: true,\r\n    result: token[0],\r\n  });\r\n};\r\n\r\nconst getLoggedInUser = async (req, res, next) => {\r\n  // Call Get Logged in User function from userService\r\n  const user = await userService.getLoggedInUser(req.user.id);\r\n\r\n  console.log(user);\r\n\r\n  if (user.err) {\r\n    res.status(400).json({ success: false, msg: user.err });\r\n  }\r\n\r\n  res.status(200).json({\r\n    success: true,\r\n    result: user[0],\r\n  });\r\n};\r\n\r\nconst updateUser = async (req, res) => {\r\n  const errors = validationResult(req);\r\n\r\n  if (!errors.isEmpty()) {\r\n    return res.status(400).json({ errors: errors.array() });\r\n  }\r\n\r\n  let userID;\r\n\r\n  if (req.user === undefined && req.query.userID === undefined) {\r\n    res\r\n      .status(400)\r\n      .json({ success: false, msg: \"unable to authenticate this user\" });\r\n  }\r\n  if (req.user) userID = req.user.id;\r\n  if (req.query.userID && req.admin) userID = req.query.userID;\r\n\r\n  const user = await userService.updateUser(req.body, userID);\r\n\r\n  if (user.err) {\r\n    return res.status(500).json({ success: false, msg: user.err });\r\n  }\r\n\r\n  res.status(200).json({\r\n    success: true,\r\n    user: user,\r\n  });\r\n};\r\n// const createUserBasket = async (req, res) => { deprecated\r\n//   if (!req.body.store) {\r\n//     return res\r\n//       .status(400)\r\n//       .json({ success: false, msg: \"basket details required\" });\r\n//   }\r\n//   const action = await userService.createUserBasket(req.user.id, req.body);\r\n//   if (action.err) {\r\n//     return res.status(403).json({ success: false, msg: action.err });\r\n//   }\r\n\r\n//   res.status(200).json({ success: true, result: action });\r\n// };\r\n\r\nconst addItemToBasket = async (req, res, next) => {\r\n  try {\r\n    const action = await userService.addItemToBasket(req.user.id, req.body);\r\n    if (!action) {\r\n      return res\r\n        .status(400)\r\n        .json({ success: false, msg: \"error adding item to basket\" });\r\n    }\r\n\r\n    res.status(200).json({ success: true, result: action });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nconst getUserBasketItems = async (req, res, next) => {\r\n  try {\r\n    const action = await userService.getUserBasketItems(req.user.id);\r\n    if (!action) {\r\n      return res\r\n        .status(400)\r\n        .json({ success: false, msg: \"error adding item to basket\" });\r\n    }\r\n\r\n    res.status(200).json({ success: true, result: action });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nconst editBasketItems = async (req, res, next) => {\r\n  try {\r\n    const action = await userService.editBasketItems(req.user.id, req.body);\r\n    if (action.err) {\r\n      return res.status(400).json({ success: false, msg: action.err });\r\n    }\r\n\r\n    res.status(200).json({ success: true, result: action });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nconst deleteBasketItem = async (req, res, next) => {\r\n  try {\r\n    const action = await userService.deleteBasketItem(req.user.id, req.body);\r\n    if (action.err) {\r\n      return res.status(400).json({ success: false, msg: action.err });\r\n    }\r\n\r\n    res.status(200).json({ success: true, result: action });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nconst deleteAllBasketItems = async (req, res, next) => {\r\n  console.log(13456);\r\n  try {\r\n    const action = await userService.deleteAllBasketItems(req.user.id);\r\n    if (action.err) {\r\n      return res.status(400).json({ success: false, msg: action.err });\r\n    }\r\n\r\n    res.status(200).json({ success: true, result: action });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nconst forgotPassword = async (req, res) => {\r\n  const action = await userService.forgotPassword(req.body);\r\n\r\n  if (action.err) {\r\n    return res.status(404).json({ success: false, msg: action.err });\r\n  }\r\n\r\n  return res.status(200).json({ success: true, result: action });\r\n};\r\n\r\nconst validateToken = async (req, res) => {\r\n  const action = await userService.validateToken(req.query);\r\n\r\n  if (action.err) {\r\n    return res.status(403).json({ success: false, msg: action.err });\r\n  }\r\n\r\n  return res.status(200).json({ success: true, result: action });\r\n};\r\n\r\nconst createNewPassword = async (req, res) => {\r\n  const action = await userService.createNewPassword(req.body);\r\n  if (action.err) {\r\n    return res.status(403).json({ success: false, msg: action.err });\r\n  }\r\n\r\n  return res.status(200).json({ success: true, result: action });\r\n};\r\nexport {\r\n  getUsers,\r\n  verifyEmailAddress,\r\n  registerUser,\r\n  loginUser,\r\n  getLoggedInUser,\r\n  updateUser,\r\n  addItemToBasket,\r\n  forgotPassword,\r\n  validateToken,\r\n  createNewPassword,\r\n  // createUserBasket,\r\n  getUserBasketItems,\r\n  editBasketItems,\r\n  deleteBasketItem,\r\n  deleteAllBasketItems,\r\n};\r\n"],"file":"user.controller.js"}