{"version":3,"sources":["../../src/controllers/order.controller.js"],"names":["getOrders","req","res","next","query","skip","undefined","limit","status","json","success","msg","orderService","allOrders","err","length","result","createOrder","user","body","id","newOrder","toggleFavorite","params","orderID","favoriteOrder","getOrderDetails","orderDetails","editOrder","updatedOrder","reviewOrder","store","newReview"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA;AAEA,IAAMA,SAAS;AAAA,2FAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,gBAAIF,GAAG,CAACG,KAAJ,CAAUC,IAAV,KAAmBC,SAAnB,IAAgCL,GAAG,CAACG,KAAJ,CAAUG,KAAV,KAAoBD,SAAxD,EAAmE;AACjEJ,cAAAA,GAAG,CACAM,MADH,CACU,GADV,EAEGC,IAFH,CAEQ;AAAEC,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,GAAG,EAAE;AAAvB,eAFR;AAGD;;AALe;AAAA,mBAOQC,YAAY,CAACZ,SAAb,CAAuBC,GAAG,CAACG,KAA3B,CAPR;;AAAA;AAOVS,YAAAA,SAPU;;AAShB,gBAAIA,SAAS,CAACC,GAAd,EAAmB;AACjBZ,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,GAAG,EAAEE,SAAS,CAACC;AAAjC,eAArB;AACD;;AAEDD,YAAAA,SAAS,IAAIA,SAAS,CAACE,MAAV,GAAmB,CAAhC,GACIb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,IAAX;AAAiBM,cAAAA,MAAM,EAAEH;AAAzB,aAArB,CADJ,GAEIX,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,GAAG,EAAE;AAAvB,aAArB,CAFJ;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATX,SAAS;AAAA;AAAA;AAAA,GAAf,C,CAkBA;;;;;AAEA,IAAMiB,WAAW;AAAA,4FAAG,kBAAOhB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,gBAAIF,GAAG,CAACiB,IAAR,EAAcjB,GAAG,CAACkB,IAAJ,CAASD,IAAT,GAAgBjB,GAAG,CAACiB,IAAJ,CAASE,EAAzB;AADI;AAAA,mBAGGR,YAAY,CAACK,WAAb,CAAyBhB,GAAG,CAACkB,IAA7B,CAHH;;AAAA;AAGdE,YAAAA,QAHc;AAKlBA,YAAAA,QAAQ,CAACP,GAAT,GACIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,GAAG,EAAEU,QAAQ,CAACP;AAAhC,aAArB,CADJ,GAEIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,IAAX;AAAiBM,cAAAA,MAAM,EAAEK;AAAzB,aAArB,CAFJ;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXJ,WAAW;AAAA;AAAA;AAAA,GAAjB,C,CAUA;;;;;AAEA,IAAMK,cAAc;AAAA,4FAAG,kBAAOrB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKS,YAAY,CAACU,cAAb,CAA4BrB,GAAG,CAACsB,MAAJ,CAAWC,OAAvC,CADL;;AAAA;AACjBC,YAAAA,aADiB;AAGrBA,YAAAA,aAAa,CAACX,GAAd,GACIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,GAAG,EAAEc,aAAa,CAACX;AAArC,aAArB,CADJ,GAEIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,IAAX;AAAiBM,cAAAA,MAAM,EAAES,aAAa,CAACd;AAAvC,aAArB,CAFJ;;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdW,cAAc;AAAA;AAAA;AAAA,GAApB;;;;AAQA,IAAMI,eAAe;AAAA,4FAAG,kBAAOzB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKS,YAAY,CAACc,eAAb,CAA6BzB,GAAG,CAACsB,MAAJ,CAAWC,OAAxC,CADL;;AAAA;AAChBG,YAAAA,YADgB;AAGtBA,YAAAA,YAAY,CAACb,GAAb,GACIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,GAAG,EAAEgB,YAAY,CAACb;AAApC,aAArB,CADJ,GAEIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,IAAX;AAAiBM,cAAAA,MAAM,EAAEW;AAAzB,aAArB,CAFJ;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfD,eAAe;AAAA;AAAA;AAAA,GAArB,C,CAQA;;;;;AAEA,IAAME,SAAS;AAAA,4FAAG,kBAAO3B,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSS,YAAY,CAACgB,SAAb,CAAuB3B,GAAG,CAACsB,MAAJ,CAAWC,OAAlC,EAA2CvB,GAAG,CAACkB,IAA/C,CADT;;AAAA;AACZU,YAAAA,YADY;AAGhBA,YAAAA,YAAY,CAACf,GAAb,GACIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,GAAG,EAAEkB,YAAY,CAACf;AAApC,aAArB,CADJ,GAEIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,IAAX;AAAiBM,cAAAA,MAAM,EAAEa;AAAzB,aAArB,CAFJ;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATD,SAAS;AAAA;AAAA;AAAA,GAAf,C,CAOA;;;;;AAEA,IAAME,WAAW;AAAA,4FAAG,kBAAO7B,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACdF,GAAG,CAAC8B,KADU;AAAA;AAAA;AAAA;;AAAA,8CAET7B,GAAG,CACPM,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,GAAG,EAAE;AAAvB,aAFD,CAFS;;AAAA;AAAA;AAAA,mBAMMC,YAAY,CAACkB,WAAb,CAAyB7B,GAAG,CAACkB,IAA7B,CANN;;AAAA;AAMZa,YAAAA,SANY;;AAAA,iBAQdA,SAAS,CAAClB,GARI;AAAA;AAAA;AAAA;;AAAA,8CASTZ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,GAAG,EAAEqB,SAAS,CAAClB;AAAjC,aAArB,CATS;;AAAA;AAYlBZ,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,IAAX;AAAiBM,cAAAA,MAAM,EAAEgB;AAAzB,aAArB;;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXF,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import * as orderService from \"../services/order.service.js\";\r\nimport { validationResult } from \"express-validator\";\r\n\r\n//======================================================================\r\n\r\nconst getOrders = async (req, res, next) => {\r\n  if (req.query.skip === undefined || req.query.limit === undefined) {\r\n    res\r\n      .status(400)\r\n      .json({ success: false, msg: \"filtering parameters are missing\" });\r\n  }\r\n\r\n  const allOrders = await orderService.getOrders(req.query);\r\n\r\n  if (allOrders.err) {\r\n    res.status(500).json({ success: false, msg: allOrders.err });\r\n  }\r\n\r\n  allOrders && allOrders.length > 0\r\n    ? res.status(200).json({ success: true, result: allOrders })\r\n    : res.status(404).json({ success: false, msg: \"No order found\" });\r\n};\r\n\r\n//======================================================================\r\n\r\nconst createOrder = async (req, res, next) => {\r\n  if (req.user) req.body.user = req.user.id;\r\n\r\n  let newOrder = await orderService.createOrder(req.body);\r\n\r\n  newOrder.err\r\n    ? res.status(500).json({ success: false, msg: newOrder.err })\r\n    : res.status(201).json({ success: true, result: newOrder });\r\n};\r\n\r\n//======================================================================\r\n\r\nconst toggleFavorite = async (req, res, next) => {\r\n  let favoriteOrder = await orderService.toggleFavorite(req.params.orderID);\r\n\r\n  favoriteOrder.err\r\n    ? res.status(500).json({ success: false, msg: favoriteOrder.err })\r\n    : res.status(200).json({ success: true, result: favoriteOrder.msg });\r\n};\r\n\r\nconst getOrderDetails = async (req, res, next) => {\r\n  const orderDetails = await orderService.getOrderDetails(req.params.orderID);\r\n\r\n  orderDetails.err\r\n    ? res.status(500).json({ success: false, msg: orderDetails.err })\r\n    : res.status(200).json({ success: true, result: orderDetails });\r\n};\r\n\r\n//======================================================================\r\n\r\nconst editOrder = async (req, res, next) => {\r\n  let updatedOrder = await orderService.editOrder(req.params.orderID, req.body);\r\n\r\n  updatedOrder.err\r\n    ? res.status(500).json({ success: false, msg: updatedOrder.err })\r\n    : res.status(200).json({ success: true, result: updatedOrder });\r\n};\r\n//======================================================================\r\n\r\nconst reviewOrder = async (req, res, next) => {\r\n  if (req.store) {\r\n    return res\r\n      .status(400)\r\n      .json({ success: false, msg: \"action not allowed by store\" });\r\n  }\r\n  const newReview = await orderService.reviewOrder(req.body);\r\n\r\n  if (newReview.err) {\r\n    return res.status(400).json({ success: false, msg: newReview.err });\r\n  }\r\n\r\n  res.status(200).json({ success: true, result: newReview });\r\n};\r\n\r\nexport {\r\n  getOrders,\r\n  createOrder,\r\n  toggleFavorite,\r\n  getOrderDetails,\r\n  editOrder,\r\n  reviewOrder,\r\n};\r\n"],"file":"order.controller.js"}