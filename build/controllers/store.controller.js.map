{"version":3,"sources":["../../src/controllers/store.controller.js"],"names":["getStores","req","res","next","query","skip","undefined","limit","status","json","success","msg","storeService","stores","length","result","createStore","errors","isEmpty","error_msgs","array","forEach","element","body","store","err","loginStore","console","log","getLoggedInStore","id","updateStore","admin","storeID","addLabel","getLabels","getStore","params","storeId","storeDetails"],"mappings":"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","sourcesContent":["import express from \"express\";\r\nimport * as storeService from \"../services/store.service.js\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { auth } from \"../middleware/auth.js\";\r\nimport { check, validationResult } from \"express-validator\";\r\n\r\nconst getStores = async (req, res, next) => {\r\n  if (req.query.skip === undefined || req.query.limit === undefined) {\r\n    return res\r\n      .status(400)\r\n      .json({ success: false, msg: \"Filtering parameters are missing\" });\r\n  }\r\n\r\n  const stores = await storeService.getStores(req.query);\r\n\r\n  stores && stores.length > 0\r\n    ? res.status(200).json({ success: true, result: stores })\r\n    : res.status(404).json({ success: false, msg: \"No Store found\" });\r\n};\r\n\r\nconst createStore = async (req, res, next) => {\r\n  const errors = validationResult(req);\r\n\r\n  if (!errors.isEmpty()) {\r\n    let error_msgs = [];\r\n    errors.array().forEach((element) => {\r\n      error_msgs = [...error_msgs, element.msg];\r\n    });\r\n\r\n    return res.status(400).json({\r\n      success: false,\r\n      errors: error_msgs,\r\n    });\r\n  }\r\n\r\n  const store = await storeService.createStore(req.body);\r\n\r\n  if (store.err) {\r\n    res.status(409).json({ success: false, msg: store.err });\r\n  } else {\r\n    res.status(201).json({ success: true, result: store });\r\n  }\r\n};\r\n\r\nconst loginStore = async (req, res, next) => {\r\n  const errors = validationResult(req);\r\n\r\n  if (!errors.isEmpty()) {\r\n    res.status(400).json({\r\n      success: false,\r\n      errors: errors,\r\n    });\r\n  }\r\n\r\n  const store = await storeService.loginStore(req.body);\r\n\r\n  if (store.err) {\r\n    console.log(store.err.msg);\r\n    return res.status(403).json({ success: false, msg: store.err });\r\n  } else {\r\n    res.status(200).json({ success: true, result: store });\r\n  }\r\n};\r\n\r\nconst getLoggedInStore = async (req, res, next) => {\r\n  // Call Get Logged in User function from userService\r\n  const store = await storeService.getLoggedInStore(req.store.id);\r\n\r\n  if (store.err) {\r\n    res.status(500).json({ success: false, msg: store.err });\r\n  } else {\r\n    res.status(200).json({\r\n      success: true,\r\n      result: store,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateStore = async (req, res, next) => {\r\n  // verifiy permission\r\n  if (req.admin === undefined && req.store === undefined)\r\n    return res.status(403).json({\r\n      success: false,\r\n      msg: \"You're not permitted to carry out this action\",\r\n    });\r\n\r\n  const errors = validationResult(req);\r\n\r\n  if (!errors.isEmpty()) {\r\n    res.status(400).json({\r\n      success: false,\r\n      errors: errors.array()[\"msg\"],\r\n    });\r\n  }\r\n\r\n  let storeID;\r\n\r\n  if (req.store === undefined && req.query.storeID === undefined) {\r\n    res\r\n      .status(400)\r\n      .json({ success: false, msg: \"unable to authenticate this user\" });\r\n  }\r\n  if (req.store) storeID = req.store.id;\r\n  if (req.query.storeID && req.admin) storeID = req.query.storeID;\r\n\r\n  const store = await storeService.updateStore(storeID, req.body);\r\n\r\n  if (store.err) {\r\n    res.status(500).json({ success: false, msg: store.err });\r\n  } else {\r\n    res.status(200).json({ success: true, result: store });\r\n  }\r\n};\r\n\r\nconst addLabel = async (req, res, next) => {\r\n  // verifiy permission\r\n  if (req.admin === undefined && req.store === undefined)\r\n    return res.status(403).json({\r\n      success: false,\r\n      msg: \"You're not permitted to carry out this action\",\r\n    });\r\n\r\n  const errors = validationResult(req);\r\n\r\n  if (!errors.isEmpty()) {\r\n    res.status(400).json({\r\n      success: false,\r\n      errors: errors.array()[\"msg\"],\r\n    });\r\n  }\r\n\r\n  let storeID;\r\n\r\n  if (req.store === undefined && req.query.storeID === undefined) {\r\n    res\r\n      .status(400)\r\n      .json({ success: false, msg: \"unable to authenticate this user\" });\r\n  }\r\n  if (req.store) storeID = req.store.id;\r\n  if (req.query.storeID && req.admin) storeID = req.query.storeID;\r\n\r\n  const store = await storeService.addLabel(storeID, req.body);\r\n  console.log(req.body);\r\n  if (store.err) {\r\n    res.status(500).json({ success: false, msg: store.err });\r\n  } else {\r\n    res.status(200).json({ success: true, result: store });\r\n  }\r\n};\r\n\r\nconst getLabels = async (req, res, next) => {\r\n  // verifiy permission\r\n  if (req.admin === undefined && req.store === undefined)\r\n    return res.status(403).json({\r\n      success: false,\r\n      msg: \"You're not permitted to carry out this action\",\r\n    });\r\n\r\n  const errors = validationResult(req);\r\n\r\n  if (!errors.isEmpty()) {\r\n    res.status(400).json({\r\n      success: false,\r\n      errors: errors.array()[\"msg\"],\r\n    });\r\n  }\r\n\r\n  let storeID;\r\n\r\n  if (req.store === undefined && req.query.storeID === undefined) {\r\n    res\r\n      .status(400)\r\n      .json({ success: false, msg: \"unable to authenticate this user\" });\r\n  }\r\n  if (req.store) storeID = req.store.id;\r\n  if (req.query.storeID && req.admin) storeID = req.query.storeID;\r\n\r\n  console.log(storeID);\r\n  const store = await storeService.getLabels(storeID);\r\n  if (store.err) {\r\n    res.status(500).json({ success: false, msg: store.err });\r\n  } else {\r\n    res.status(200).json({ success: true, result: store });\r\n  }\r\n};\r\n\r\nconst getStore = async (req, res, next) => {\r\n  const storeDetails = await storeService.getStore(req.params.storeId);\r\n\r\n  if (storeDetails.err) {\r\n    return res.status(403).json({ success: false, msg: storeDetails.err });\r\n  } else {\r\n    res.status(200).json({ success: true, result: storeDetails });\r\n  }\r\n};\r\n\r\nexport {\r\n  getStores,\r\n  createStore,\r\n  loginStore,\r\n  getLoggedInStore,\r\n  updateStore,\r\n  addLabel,\r\n  getLabels,\r\n  getStore,\r\n};\r\n"],"file":"store.controller.js"}