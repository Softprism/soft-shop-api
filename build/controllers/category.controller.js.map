{"version":3,"sources":["../../src/controllers/category.controller.js"],"names":["getCategories","req","res","next","query","skip","undefined","limit","status","json","success","msg","categoryService","categories","err","length","result","createCategory","admin","errors","isEmpty","array","body","request","editCategory","params","id","deleteCategory"],"mappings":"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","sourcesContent":["import * as categoryService from '../services/category.service.js'\r\nimport { validationResult } from 'express-validator';\r\n\r\n// FUNCTIONS\r\n// Get Categories\r\nconst getCategories = async (req, res, next) => {\r\n  if (req.query.skip === undefined || req.query.limit === undefined) {\r\n\t\tres.status(400).json({ success: false, msg: 'filtering parameters are missing' });\r\n\t}\r\n\t// Call getCategories function from category service\r\n\tconst categories = await categoryService.getCategories(req.query)\r\n\r\n  if(categories.err) {\r\n\t\tres.status(400).json({ success: false, msg: categories.err });\r\n\t}\r\n  categories && categories.length > 0\r\n  ? res.status(200).json({ success: true, result: categories })\r\n  : res.status(404).json({ success: false, msg: 'No categories found' });\r\n}\r\n\r\n// Create Category\r\nconst createCategory = async (req, res, next) => {\r\n  // verifiy permission\r\n  if(req.admin === undefined) return res.status(403).json({ success: false, msg: 'you\\'re not permiited to carry out this action' })\r\n\r\n\tconst errors = validationResult(req);\r\n\tif (!errors.isEmpty()) {\r\n\t\treturn res.status(400).json({ errors: errors.array() });\r\n\t}\r\n\r\n\tconst request = await categoryService.createCategory(req.body)\r\n\t\r\n  if(request.err) {\r\n\t\tres.status(500).json({ success: false, msg: request.err })\r\n  } else {\r\n    res.status(201).json({ success: true, result: request.msg })\r\n  }\r\n}\r\n\r\n// Edit Category\r\nconst editCategory = async (req, res, next) => {\r\n  // verifiy permission\r\n  if(req.admin === undefined) return res.status(403).json({ success: false, msg: 'you\\'re not permiited to carry out this action' })\r\n\tconst errors = validationResult(req);\r\n\r\n\tif (!errors.isEmpty()) {\r\n\t\treturn res.status(400).json({ errors: errors.array() });\r\n\t}\r\n\r\n\tconst request = await categoryService.editCategory(req.body, req.params.id)\r\n\r\n\tif(request.err) {\r\n\t\tres.status(500).json({ success: false, msg: request.err })\r\n  } else {\r\n    res.status(200).json({ success: true, result: request }) //request returns the modified category\r\n  }\r\n\r\n}\r\n\r\nconst deleteCategory = async (req, res, next) => {\r\n  // verifiy permission\r\n  if(req.admin === undefined) return res.status(403).json({ success: false, msg: 'you\\'re not permiited to carry out this action' })\r\n\tconst request = await categoryService.deleteCategory(req.params.id)\r\n\t\r\n  if(request.err) {\r\n\t\tres.status(404).json({ success: false, msg: request.err })\r\n  } else {\r\n    res.status(200).json({ success: true, result: request.msg })\r\n  }\r\n}\r\n\r\nexport {getCategories, editCategory, createCategory, deleteCategory}\r\n"],"file":"category.controller.js"}