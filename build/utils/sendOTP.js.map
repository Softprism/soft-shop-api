{"version":3,"sources":["../../src/utils/sendOTP.js"],"names":["getOTP","type","email","Token","findOne","oldTokenRequest","otp","otpGenerator","generate","alphabets","upperCase","specialChars","tokenData","newOTP","save"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,MAAM;AAAA,2FAAG,iBAAOC,IAAP,EAAaC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEeC,wBAAMC,OAAN,CAAc;AAAEF,cAAAA,KAAK,EAALA,KAAF;AAASD,cAAAA,IAAI,EAAJA;AAAT,aAAd,CAFf;;AAAA;AAETI,YAAAA,eAFS;;AAAA,iBAITA,eAJS;AAAA;AAAA;AAAA;;AAAA,6CAMJA,eANI;;AAAA;AASb;AACIC,YAAAA,GAVS,GAUHC,yBAAaC,QAAb,CAAsB,CAAtB,EAAyB;AACjCC,cAAAA,SAAS,EAAE,KADsB;AAEjCC,cAAAA,SAAS,EAAE,KAFsB;AAGjCC,cAAAA,YAAY,EAAE;AAHmB,aAAzB,CAVG,EAgBb;;AACIC,YAAAA,SAjBS,GAiBG;AAAEV,cAAAA,KAAK,EAALA,KAAF;AAASI,cAAAA,GAAG,EAAHA,GAAT;AAAcL,cAAAA,IAAI,EAAJA;AAAd,aAjBH;AAmBTY,YAAAA,MAnBS,GAmBA,IAAIV,uBAAJ,CAAUS,SAAV,EAAqBE,IAArB,EAnBA;AAAA,6CAqBND,MArBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANb,MAAM;AAAA;AAAA;AAAA,GAAZ","sourcesContent":["import Token from \"../../models/tokens.model.js\";\r\n\r\nimport otpGenerator from \"otp-generator\";\r\n\r\nconst getOTP = async (type, email) => {\r\n  //Check if request has been made before, can be used for resend token\r\n  let oldTokenRequest = await Token.findOne({ email, type });\r\n\r\n  if (oldTokenRequest) {\r\n    // resend old token\r\n    return oldTokenRequest;\r\n  }\r\n\r\n  // generate OTP\r\n  let otp = otpGenerator.generate(4, {\r\n    alphabets: false,\r\n    upperCase: false,\r\n    specialChars: false,\r\n  });\r\n\r\n  // add token to DB\r\n  let tokenData = { email, otp, type };\r\n\r\n  let newOTP = new Token(tokenData).save();\r\n\r\n  return newOTP;\r\n};\r\n\r\nexport { getOTP };\r\n"],"file":"sendOTP.js"}