{"version":3,"sources":["../src/server.js"],"names":["dotenv","config","app","use","express","urlencoded","extended","json","userRoutes","adminRoutes","productRoutes","storeRoutes","orderRoutes","categoryRoutes","get","req","res","status","success","msg","errorHandler","PORT","process","env","listen","console","log","NODE_ENV"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEA;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQC,oBAAQG,IAAR,EAAR;AACAL,GAAG,CAACC,GAAJ,CAAQ,uBAAR,E,CAEA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBK,sBAAlB;AACAN,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBM,uBAAnB;AACAP,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBO,yBAArB;AACAR,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBQ,uBAAnB;AACAT,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBS,uBAAlB;AACAV,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBU,0BAArB;AACAX,GAAG,CAACY,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AAAEW,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAArB;AACA,CAFD,E,CAIA;;AACAjB,GAAG,CAACC,GAAJ,CAAQiB,6BAAR,E,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAnB,GAAG,CAACsB,MAAJ,CACCH,IADD,EAECI,OAAO,CAACC,GAAR,6BAAiCJ,OAAO,CAACC,GAAR,CAAYI,QAA7C,2BAAsEN,IAAtE,EAFD","sourcesContent":["import express from 'express';\r\nimport dotenv from 'dotenv';\r\nimport { errorHandler } from './middleware/errorMiddleware.js';\r\nimport cors from 'cors';\r\nimport { connectDB } from './config/db.js';\r\nimport userRoutes from './routes/user.routes.js';\r\nimport adminRoutes from './routes/admin.routes.js';\r\nimport productRoutes from './routes/product.routes.js';\r\nimport storeRoutes from './routes/store.routes.js';\r\nimport orderRoutes from './routes/order.routes.js';\r\nimport categoryRoutes from './routes/category.routes.js'\r\n\r\ndotenv.config();\r\n\r\nconnectDB();\r\n\r\nconst app = express();\r\n\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\n// api routes\r\napp.use('/users', userRoutes);\r\napp.use('/admins', adminRoutes);\r\napp.use('/products', productRoutes);\r\napp.use('/stores', storeRoutes);\r\napp.use('/order', orderRoutes);\r\napp.use('/category', categoryRoutes);\r\napp.get('/', (req, res) => {\r\n\tres.status(200).json({ success: true, msg: 'API is running...'} );\r\n});\r\n\r\n// global error handler\r\napp.use(errorHandler);\r\n\r\n// Start server\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.listen(\r\n\tPORT,\r\n\tconsole.log(`Server running in ${process.env.NODE_ENV} mode on port ${PORT}`)\r\n);\r\n"],"file":"server.js"}